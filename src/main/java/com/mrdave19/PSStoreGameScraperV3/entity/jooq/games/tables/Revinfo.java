/*
 * This file is generated by jOOQ.
 */
package com.mrdave19.PSStoreGameScraperV3.entity.jooq.games.tables;


import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row2;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import com.mrdave19.PSStoreGameScraperV3.entity.jooq.games.Games;
import com.mrdave19.PSStoreGameScraperV3.entity.jooq.games.Indexes;
import com.mrdave19.PSStoreGameScraperV3.entity.jooq.games.Keys;
import com.mrdave19.PSStoreGameScraperV3.entity.jooq.games.tables.records.RevinfoRecord;


/**
 * This class is generated by jOOQ.
 */

@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Revinfo extends TableImpl<RevinfoRecord> {

    private static final long serialVersionUID = 1727431177;

    /**
     * The reference instance of <code>games.revinfo</code>
     */
    public static final Revinfo REVINFO = new Revinfo();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RevinfoRecord> getRecordType() {
        return RevinfoRecord.class;
    }

    /**
     * The column <code>games.revinfo.rev</code>.
     */
    public final TableField<RevinfoRecord, Integer> REV = createField(DSL.name("rev"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>games.revinfo.revtstmp</code>.
     */
    public final TableField<RevinfoRecord, Long> REVTSTMP = createField(DSL.name("revtstmp"), org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * Create a <code>games.revinfo</code> table reference
     */
    public Revinfo() {
        this(DSL.name("revinfo"), null);
    }

    /**
     * Create an aliased <code>games.revinfo</code> table reference
     */
    public Revinfo(String alias) {
        this(DSL.name(alias), REVINFO);
    }

    /**
     * Create an aliased <code>games.revinfo</code> table reference
     */
    public Revinfo(Name alias) {
        this(alias, REVINFO);
    }

    private Revinfo(Name alias, Table<RevinfoRecord> aliased) {
        this(alias, aliased, null);
    }

    private Revinfo(Name alias, Table<RevinfoRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Revinfo(Table<O> child, ForeignKey<O, RevinfoRecord> key) {
        super(child, key, REVINFO);
    }

    @Override
    public Schema getSchema() {
        return Games.GAMES;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.REVINFO_PRIMARY);
    }

    @Override
    public Identity<RevinfoRecord, Integer> getIdentity() {
        return Keys.IDENTITY_REVINFO;
    }

    @Override
    public UniqueKey<RevinfoRecord> getPrimaryKey() {
        return Keys.KEY_REVINFO_PRIMARY;
    }

    @Override
    public List<UniqueKey<RevinfoRecord>> getKeys() {
        return Arrays.<UniqueKey<RevinfoRecord>>asList(Keys.KEY_REVINFO_PRIMARY);
    }

    @Override
    public Revinfo as(String alias) {
        return new Revinfo(DSL.name(alias), this);
    }

    @Override
    public Revinfo as(Name alias) {
        return new Revinfo(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Revinfo rename(String name) {
        return new Revinfo(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Revinfo rename(Name name) {
        return new Revinfo(name, null);
    }

    // -------------------------------------------------------------------------
    // Row2 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row2<Integer, Long> fieldsRow() {
        return (Row2) super.fieldsRow();
    }
}
