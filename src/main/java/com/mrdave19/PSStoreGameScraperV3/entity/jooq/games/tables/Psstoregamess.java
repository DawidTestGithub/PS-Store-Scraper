/*
 * This file is generated by jOOQ.
 */
package com.mrdave19.PSStoreGameScraperV3.entity.jooq.games.tables;


import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import com.mrdave19.PSStoreGameScraperV3.entity.jooq.games.Games;
import com.mrdave19.PSStoreGameScraperV3.entity.jooq.games.Indexes;
import com.mrdave19.PSStoreGameScraperV3.entity.jooq.games.Keys;
import com.mrdave19.PSStoreGameScraperV3.entity.jooq.games.tables.records.PsstoregamessRecord;


/**
 * This class is generated by jOOQ.
 */

@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Psstoregamess extends TableImpl<PsstoregamessRecord> {

    private static final long serialVersionUID = 1165470659;

    /**
     * The reference instance of <code>games.psstoregamess</code>
     */
    public static final Psstoregamess PSSTOREGAMESS = new Psstoregamess();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PsstoregamessRecord> getRecordType() {
        return PsstoregamessRecord.class;
    }

    /**
     * The column <code>games.psstoregamess.id</code>.
     */
    public final TableField<PsstoregamessRecord, String> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>games.psstoregamess.device</code>.
     */
    public final TableField<PsstoregamessRecord, String> DEVICE = createField(DSL.name("device"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>games.psstoregamess.name</code>.
     */
    public final TableField<PsstoregamessRecord, String> NAME = createField(DSL.name("name"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>games.psstoregamess.price</code>.
     */
    public final TableField<PsstoregamessRecord, String> PRICE = createField(DSL.name("price"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>games.psstoregamess.type</code>.
     */
    public final TableField<PsstoregamessRecord, String> TYPE = createField(DSL.name("type"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * Create a <code>games.psstoregamess</code> table reference
     */
    public Psstoregamess() {
        this(DSL.name("psstoregamess"), null);
    }

    /**
     * Create an aliased <code>games.psstoregamess</code> table reference
     */
    public Psstoregamess(String alias) {
        this(DSL.name(alias), PSSTOREGAMESS);
    }

    /**
     * Create an aliased <code>games.psstoregamess</code> table reference
     */
    public Psstoregamess(Name alias) {
        this(alias, PSSTOREGAMESS);
    }

    private Psstoregamess(Name alias, Table<PsstoregamessRecord> aliased) {
        this(alias, aliased, null);
    }

    private Psstoregamess(Name alias, Table<PsstoregamessRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Psstoregamess(Table<O> child, ForeignKey<O, PsstoregamessRecord> key) {
        super(child, key, PSSTOREGAMESS);
    }

    @Override
    public Schema getSchema() {
        return Games.GAMES;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.PSSTOREGAMESS_PRIMARY);
    }

    @Override
    public UniqueKey<PsstoregamessRecord> getPrimaryKey() {
        return Keys.KEY_PSSTOREGAMESS_PRIMARY;
    }

    @Override
    public List<UniqueKey<PsstoregamessRecord>> getKeys() {
        return Arrays.<UniqueKey<PsstoregamessRecord>>asList(Keys.KEY_PSSTOREGAMESS_PRIMARY);
    }

    @Override
    public Psstoregamess as(String alias) {
        return new Psstoregamess(DSL.name(alias), this);
    }

    @Override
    public Psstoregamess as(Name alias) {
        return new Psstoregamess(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Psstoregamess rename(String name) {
        return new Psstoregamess(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Psstoregamess rename(Name name) {
        return new Psstoregamess(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<String, String, String, String, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
