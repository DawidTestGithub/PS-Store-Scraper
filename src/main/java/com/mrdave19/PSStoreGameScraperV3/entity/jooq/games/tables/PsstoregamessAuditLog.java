/*
 * This file is generated by jOOQ.
 */
package com.mrdave19.PSStoreGameScraperV3.entity.jooq.games.tables;


import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row7;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import com.mrdave19.PSStoreGameScraperV3.entity.jooq.games.Games;
import com.mrdave19.PSStoreGameScraperV3.entity.jooq.games.Indexes;
import com.mrdave19.PSStoreGameScraperV3.entity.jooq.games.Keys;
import com.mrdave19.PSStoreGameScraperV3.entity.jooq.games.tables.records.PsstoregamessAuditLogRecord;


/**
 * This class is generated by jOOQ.
 */

@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PsstoregamessAuditLog extends TableImpl<PsstoregamessAuditLogRecord> {

    private static final long serialVersionUID = -1242436800;

    /**
     * The reference instance of <code>games.psstoregamess_audit_log</code>
     */
    public static final PsstoregamessAuditLog PSSTOREGAMESS_AUDIT_LOG = new PsstoregamessAuditLog();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PsstoregamessAuditLogRecord> getRecordType() {
        return PsstoregamessAuditLogRecord.class;
    }

    /**
     * The column <code>games.psstoregamess_audit_log.id</code>.
     */
    public final TableField<PsstoregamessAuditLogRecord, String> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>games.psstoregamess_audit_log.rev</code>.
     */
    public final TableField<PsstoregamessAuditLogRecord, Integer> REV = createField(DSL.name("rev"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>games.psstoregamess_audit_log.revtype</code>.
     */
    public final TableField<PsstoregamessAuditLogRecord, Byte> REVTYPE = createField(DSL.name("revtype"), org.jooq.impl.SQLDataType.TINYINT, this, "");

    /**
     * The column <code>games.psstoregamess_audit_log.device</code>.
     */
    public final TableField<PsstoregamessAuditLogRecord, String> DEVICE = createField(DSL.name("device"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>games.psstoregamess_audit_log.name</code>.
     */
    public final TableField<PsstoregamessAuditLogRecord, String> NAME = createField(DSL.name("name"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>games.psstoregamess_audit_log.price</code>.
     */
    public final TableField<PsstoregamessAuditLogRecord, String> PRICE = createField(DSL.name("price"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>games.psstoregamess_audit_log.type</code>.
     */
    public final TableField<PsstoregamessAuditLogRecord, String> TYPE = createField(DSL.name("type"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * Create a <code>games.psstoregamess_audit_log</code> table reference
     */
    public PsstoregamessAuditLog() {
        this(DSL.name("psstoregamess_audit_log"), null);
    }

    /**
     * Create an aliased <code>games.psstoregamess_audit_log</code> table reference
     */
    public PsstoregamessAuditLog(String alias) {
        this(DSL.name(alias), PSSTOREGAMESS_AUDIT_LOG);
    }

    /**
     * Create an aliased <code>games.psstoregamess_audit_log</code> table reference
     */
    public PsstoregamessAuditLog(Name alias) {
        this(alias, PSSTOREGAMESS_AUDIT_LOG);
    }

    private PsstoregamessAuditLog(Name alias, Table<PsstoregamessAuditLogRecord> aliased) {
        this(alias, aliased, null);
    }

    private PsstoregamessAuditLog(Name alias, Table<PsstoregamessAuditLogRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> PsstoregamessAuditLog(Table<O> child, ForeignKey<O, PsstoregamessAuditLogRecord> key) {
        super(child, key, PSSTOREGAMESS_AUDIT_LOG);
    }

    @Override
    public Schema getSchema() {
        return Games.GAMES;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.PSSTOREGAMESS_AUDIT_LOG_FKPVIOTTRK2Y8L5FLUHAA9NDDOX, Indexes.PSSTOREGAMESS_AUDIT_LOG_PRIMARY);
    }

    @Override
    public UniqueKey<PsstoregamessAuditLogRecord> getPrimaryKey() {
        return Keys.KEY_PSSTOREGAMESS_AUDIT_LOG_PRIMARY;
    }

    @Override
    public List<UniqueKey<PsstoregamessAuditLogRecord>> getKeys() {
        return Arrays.<UniqueKey<PsstoregamessAuditLogRecord>>asList(Keys.KEY_PSSTOREGAMESS_AUDIT_LOG_PRIMARY);
    }

    @Override
    public List<ForeignKey<PsstoregamessAuditLogRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<PsstoregamessAuditLogRecord, ?>>asList(Keys.FKPVIOTTRK2Y8L5FLUHAA9NDDOX);
    }

    public Revinfo revinfo() {
        return new Revinfo(this, Keys.FKPVIOTTRK2Y8L5FLUHAA9NDDOX);
    }

    @Override
    public PsstoregamessAuditLog as(String alias) {
        return new PsstoregamessAuditLog(DSL.name(alias), this);
    }

    @Override
    public PsstoregamessAuditLog as(Name alias) {
        return new PsstoregamessAuditLog(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PsstoregamessAuditLog rename(String name) {
        return new PsstoregamessAuditLog(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public PsstoregamessAuditLog rename(Name name) {
        return new PsstoregamessAuditLog(name, null);
    }

    // -------------------------------------------------------------------------
    // Row7 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row7<String, Integer, Byte, String, String, String, String> fieldsRow() {
        return (Row7) super.fieldsRow();
    }
}
